# Schema for Graphql server

# Query (read)
type Query {
  me: User!
  user(id: ID!): User
  users: [User]!
  product(id: ID!): Product
  products: [Product]!
}

# Mutation (create, delete, update)
type Mutation {
  signup(name: String!, email: String!, password: String!): User
  createProduct(desc: String!, price: Float!, imageUrl: String!): Product!
  updateProduct(id: ID!, desc: String, price: Float, imageUrl: String): Product!
  addToCart(id: ID!): CartItem!
  deleteCart(id: ID!): CartItem!
}

scalar Date

# A user has id, name, email, password (model)
type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  products: [Product]
  carts: [CartItem]!
  createdAt: Date!
}

# A prodcut has id, desc, price, image, user (product model)
type Product {
  id: ID!
  desc: String!
  price: Float!
  imageUrl: String!
  user: User!
  createdAt: Date!
}

type CartItem {
  id: ID!
  product: Product!
  quantity: Int!
  user: User!
  createdAt: Date!
}
